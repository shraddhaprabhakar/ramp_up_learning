fn main() {
// let x: i8 = 20;
// let x = 255i8;
// let x = 127_i8;
// let x = 2127_000 as i8; //212
// let x = 10_i32;

let x = 27_000 as i64;
let y = 10_i32;
let z = x/(y as i64);  or x as i32/y;  //this is type casting
}

//CONVERTING STRING TO INTEGER
use std::io
fn main() {
  let mut input = String::new();
  io::stdin().read_line(&mut input).expect("could not read line");
  let int_input: i64 = input.trim().parse().unwrap(); // .trim() gives us a new line, after we hit enter in a string there is an empty space which we cant see, .trim removes that extra space if not we get an error while conversion
  //parse the string and give us integer- work of parse()
  //take the integer and unwrap it into actual integer type and give us - work of unwrap()
  println!("{}", int_input+2); //to test
}
